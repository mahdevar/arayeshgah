services:

  cache:
    image: redis:alpine
    #image: public.ecr.aws/docker/library/redis:alpine
    command: redis-server --requirepass $CACHE_PASSWORD
    healthcheck:
      test: redis-cli ping

  db:
    image: postgres:alpine
    #image: public.ecr.aws/docker/library/postgres:alpine
    environment:
      POSTGRES_DB: $DB_DBNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_USER: $DB_USER
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --no-locale
    healthcheck:
      test: pg_isready --username=$DB_USER
    volumes:
      - tables:/var/lib/postgresql/data
      - ./queries:/docker-entrypoint-initdb.d

  storage:
    image: minio/minio
    #image: public.ecr.aws/bitnami/minio
    #image: quay.io/minio/minio
    command: server /data
    environment:
      MINIO_ROOT_PASSWORD: $STORAGE_SECRET_KEY
      MINIO_ROOT_USER: $STORAGE_ACCESS_KEY
    volumes:
      - files:/data
    healthcheck:
      test: curl --fail --insecure localhost:9000/minio/health/live || exit 1

  session:
    image: redis:alpine
    #image: public.ecr.aws/docker/library/redis:alpine
    command: redis-server --requirepass $SESSION_PASSWORD
    healthcheck:
      test: redis-cli ping

  app:
    image: app:alpine
    build: .
    depends_on:
      cache:
        condition: service_healthy
      db:
        condition: service_healthy
      storage:
        condition: service_healthy
      session:
        condition: service_healthy
    healthcheck:
      test: curl --fail --insecure localhost:8000 || exit 1
    volumes:
      - .:/app

  nginx:
    image: nginx:alpine
    #image: public.ecr.aws/docker/library/nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      app:
        condition: service_healthy
    #healthcheck:
    #  test: curl --output /dev/null --silent localhost || exit 1
    ports:
      - $COMPOSE_PROJECT_PORT:80

volumes:
  files:
  tables:

networks:
  default:
    driver: bridge
    name: $COMPOSE_PROJECT_NAME-net
